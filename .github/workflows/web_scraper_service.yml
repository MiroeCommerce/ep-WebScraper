# .github/workflows/web_scraper_service.yml

name: Web Scraper Service CI

on:
  push:
    branches:
      - feature/EP-26_kafka-producer
    paths:
      - "web_scraper_service/**"
      - ".github/workflows/web_scraper_service.yml"
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./web_scraper_service

    services:
      kafka:
        image: bitnami/kafka:latest
        env:
          KAFKA_CFG_NODE_ID: 0
          KAFKA_CFG_PROCESS_ROLES: controller,broker
          KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
          KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
          KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
          KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 0@kafka:9093
          KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
          ALLOW_PLAINTEXT_LISTENER: "yes"
          KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: "true"
        ports:
          - 9092:9092

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Wait for Kafka topic metadata
        run: |
          for i in {1..20}; do
            if docker run --network host --rm bitnami/kafka:latest \
              kafka-topics.sh --bootstrap-server localhost:9092 --list; then
              echo "Kafka is ready for metadata operations!"
              break
            fi
            echo "Waiting for Kafka topic metadata... ($i)"
            sleep 3
          done

      - name: Run all tests (Unit & Integration)
        run: |
          source venv/bin/activate
          python run_tests.py
        env:
          KAFKA_BOOTSTRAP_SERVERS: localhost:9092
